ros-humble-rclrs-example-msgs (0.3.2-1jammy) jammy; urgency=high

  * Autogenerated, no changelog for this version found in CHANGELOG.rst.

 -- Nikolai Morin <nnmmgit@gmail.com>  Fri, 15 Sep 2023 06:12:16 -0000

ros-humble-rclrs-example-msgs (0.3.1-1jammy) jammy; urgency=high

  * Version 0.3.1 (#285 <https://github.com/marcoag/ros2_rust/issues/285>)
  * Contributors: Nikolai Morin

 -- Nikolai Morin <nnmmgit@gmail.com>  Mon, 17 Oct 2022 00:00:00 -0000

ros-humble-rclrs-example-msgs (0.3.0-1jammy) jammy; urgency=high

  * Bump package versions to 0.3 (#274 <https://github.com/marcoag/ros2_rust/issues/274>)
  * Add support for constants to message generation (#269 <https://github.com/marcoag/ros2_rust/issues/269>)
    This will produce:
    ```
    impl VariousTypes {
    /// binary, hexadecimal and octal constants are also possible
    pub const TWO_PLUS_TWO: i8 = 5;
    /// Only unbounded strings are possible
    pub const PASSWORD: &'static str = "hunter2";
    /// As determined by Edward J. Goodwin
    pub const PI: f32 = 3.0;
    }
    ```
  * Contributors: Nikolai Morin

 -- Nikolai Morin <nnmmgit@gmail.com>  Mon, 03 Oct 2022 00:00:00 -0000

ros-humble-rclrs-example-msgs (0.2.0-1jammy) jammy; urgency=high

  * Bump every package to version 0.2 (#100 <https://github.com/marcoag/ros2_rust/issues/100>)
  * Remove unnecessary dependencies and make small cleanups (#89 <https://github.com/marcoag/ros2_rust/issues/89>)
  * Message generation refactoring (#80 <https://github.com/marcoag/ros2_rust/issues/80>)
    Previously, only messages consisting of basic types and strings were supported. Now, all message types will work, including those that have fields of nested types, bounded types, or arrays.
    Changes:
    - The "rsext" library is deleted
    - Unused messages in "rosidl_generator_rs" are deleted
    - There is a new package, "rosidl_runtime_rs", see below
    - The RMW-compatible messages from C, which do not require an extra conversion step, are exposed in addition to the "idiomatic" messages
    - Publisher and subscription are changed to work with both idiomatic and rmw types, through the unifying Message trait
    On rosidl_runtime_rs: This package is the successor of rclrs_msg_utilities package, but doesn't have much in common with it anymore.
    It provides common types and functionality for messages. The String and Sequence types and their variants in that package essentially wrap C types from the rosidl_runtime_c package and C messages generated by the "rosidl_generator_c" package.
    A number of functions and traits are implemented on these types, so that they feel as ergonomic as possible, for instance, a seq! macro for creating a sequence. There is also some documentation and doctests.
    The memory for the (non-pretty) message types is managed by the C allocator.
    Not yet implemented:
    - long double
    - constants
    - Services/clients
    - @verbatim comments
    - ndarray for sequences/arrays of numeric types
    - implementing Eq, Ord and Hash when a message contains no floats
  * Contributors: Nikolai Morin

 -- Nikolai Morin <nnmmgit@gmail.com>  Thu, 21 Jul 2022 00:00:00 -0000


